@using GrpcServiceForWASM.Core;

<div class="row assessmentQuestion">

    @switch (Question.TypeOfResponse)
    {
        case Enums.QuestionResponseType.Checkbox:
            <QuestionCheckbox @bind-Question="Question"></QuestionCheckbox>
            break;
        case Enums.QuestionResponseType.Radio:
            <QuestionRadio @bind-Question="Question"></QuestionRadio>
            break;
        case Enums.QuestionResponseType.Select:
            <QuestionSelect Question="@Question"></QuestionSelect>
            break;
        case Enums.QuestionResponseType.Text:
            <QuestionText Question="@Question"></QuestionText>
            break;
        case Enums.QuestionResponseType.Number:
            <QuestionNumber Question="@Question"></QuestionNumber>
            break;
        case Enums.QuestionResponseType.Date:
            <QuestionDate Question="@Question"></QuestionDate>
            break;
    }

    @*@foreach (var response in Question.ResponseOptions.Where(x => x.Selected).OrderBy(q => q.Sequence))
                    {
                        foreach (var followUp in response.FollowUpQuestions.OrderBy(n => n.Sequence))
                        {
                            var local = followUp;
            <div class="col-sm-12 assessmentResponseFollowUp" id="fu_@(response.ShortDescription)_@followUp.FormQuestionId.ToString()">
                <FormEntryQuestion @bind-Question="@local"></FormEntryQuestion>
            </div>
            }
        }*@
</div>

@code
{
[CascadingParameter(Name = "IsFormEntryReadOnly")]
public bool IsFormEntryReadOnly { get; set; }

[Parameter]
public GrpcServiceForWASM.Core.DTOs.FormQuestionDTO Question { get; set; }

[Parameter]
public EventCallback<GrpcServiceForWASM.Core.DTOs.FormQuestionDTO> QuestionChanged { get; set; }
}