<div class="col-sm-12 col-md-9">
    <span class="col-form-label" style="padding:0px;" name="@Question.FormQuestionId">@Question.</span>
</div>

<div class="col-sm-6 col-md-3 row">
    @foreach (var response in Question.ResponseOptions.OrderBy(x => x.SortOrder))
    {
        var responseElementIdentifier = $"q{Question.FormQuestionEntryID}-{response.ShortDescription}";
        <div class="col-sm-6 assessmentResponse custom-control custom-radio">
            <input type="radio" class="custom-control-input" name="@Question.FormQuestionId" id="@responseElementIdentifier" value="@response.ShortDescription" checked="@(response.ShortDescription == Question.ResponseValue)" @onchange="() => UpdateResponse(response.ShortDescription)" />
            <label for="@responseElementIdentifier" class="custom-control-label">@response.LongDescription</label>
        </div>
    }
</div>

@code
{
    [Parameter]
    public Example2.Services.v2.FormEntryResponse.Types.FormQuestion Question { get; set; }

    [Parameter]
    public EventCallback<Example2.Services.v2.FormEntryResponse.Types.FormQuestion> QuestionChanged { get; set; }

    async Task UpdateResponse(string response)
    {
        Question.ResponseValue = response;
        await QuestionChanged.InvokeAsync(Question);
    }
}