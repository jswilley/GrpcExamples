@using TestingWASM.Shared
@using TestingWASM.Services.v2

<div class="row assessmentQuestion">

    @switch (Question.TypeOfResponse)
    {
        case (TestingWASM.Services.v2.FormEntryResponse.Types.FormQuestion.Types.QuestionResponseType)Enums.QuestionResponseType.Checkbox:
            <QuestionCheckbox Question="Question"></QuestionCheckbox>
            break;
        case (TestingWASM.Services.v2.FormEntryResponse.Types.FormQuestion.Types.QuestionResponseType)Enums.QuestionResponseType.Radio:
            <QuestionRadio Question="Question"></QuestionRadio>
            break;
        case (TestingWASM.Services.v2.FormEntryResponse.Types.FormQuestion.Types.QuestionResponseType)Enums.QuestionResponseType.Select:
            <QuestionSelect  Question="Question"></QuestionSelect>
            break;
        case (TestingWASM.Services.v2.FormEntryResponse.Types.FormQuestion.Types.QuestionResponseType)Enums.QuestionResponseType.Text:
            <QuestionText Question="Question"></QuestionText>
            break;
        case (TestingWASM.Services.v2.FormEntryResponse.Types.FormQuestion.Types.QuestionResponseType)Enums.QuestionResponseType.Number:
            <QuestionNumber Question = "Question" ></QuestionNumber>
            break;
        case (TestingWASM.Services.v2.FormEntryResponse.Types.FormQuestion.Types.QuestionResponseType)Enums.QuestionResponseType.Date:
            <QuestionDate Question="Question" ></QuestionDate>
            break;
    }


</div>

@code
{
    [CascadingParameter(Name = "IsFormEntryReadOnly")]
    public bool IsFormEntryReadOnly { get; set; }

    [Parameter]
    public TestingWASM.Services.v2.FormEntryResponse.Types.FormQuestion Question { get; set; }

    [Parameter]
    public EventCallback<TestingWASM.Services.v2.FormEntryResponse.Types.FormQuestion> QuestionChanged { get; set; }
}