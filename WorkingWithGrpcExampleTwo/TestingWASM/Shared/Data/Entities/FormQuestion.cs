// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace TestingWASM.Shared.Data.Entities
{
    [Table("FormQuestion")]
    [Index(nameof(QuestionId), Name = "IX_FormQuestion")]
    public partial class FormQuestion
    {
        public FormQuestion()
        {
            FormQuestionEntries = new HashSet<FormQuestionEntry>();
            QuestionResponseOptionFollowUpQuestionMaps = new HashSet<QuestionResponseOptionFollowUpQuestionMap>();
        }

        [Key]
        [Column("ID")]
        public int Id { get; set; }
        [Column("QuestionID")]
        public int QuestionId { get; set; }
        [Column("FormTypeID")]
        public int FormTypeId { get; set; }
        [Required]
        public bool? Required { get; set; }
        [StringLength(100)]
        public string FormSection { get; set; }
        [Column("QuestionResponseID")]
        public int QuestionResponseId { get; set; }
        public int Sequence { get; set; }
        [StringLength(50)]
        public string DefaultResponse { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? EndDate { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime AddTimeStamp { get; set; }
        [Required]
        [StringLength(50)]
        public string AddUser { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime ChangeTimeStamp { get; set; }
        [Required]
        [StringLength(50)]
        public string ChangeUser { get; set; }

        [ForeignKey(nameof(FormTypeId))]
        [InverseProperty("FormQuestions")]
        public virtual FormType FormType { get; set; }
        [ForeignKey(nameof(QuestionId))]
        [InverseProperty("FormQuestions")]
        public virtual Question Question { get; set; }
        [ForeignKey(nameof(QuestionResponseId))]
        [InverseProperty("FormQuestions")]
        public virtual QuestionResponse QuestionResponse { get; set; }
        [InverseProperty(nameof(FormQuestionEntry.FormQuestion))]
        public virtual ICollection<FormQuestionEntry> FormQuestionEntries { get; set; }
        [InverseProperty(nameof(QuestionResponseOptionFollowUpQuestionMap.FormQuestion))]
        public virtual ICollection<QuestionResponseOptionFollowUpQuestionMap> QuestionResponseOptionFollowUpQuestionMaps { get; set; }
    }
}